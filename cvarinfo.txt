user int flak_protomenu = 0;				// version of main menu (0: final, 1: 22x betas, 2: same as 1, but with extended menu music)
user bool flak_showmenu = true;				// show the UT main menu background whenever the menu is open
server bool flak_pulsereload = false;			// pulsegun can reload (features unused animation from early versions)
server bool flak_enforcerreload = false;		// enforcer can reload
user bool flak_redeemerreadout = true;			// enable target readout, may cause slowdowns on weak CPUs
user bool flak_redeemerreadout_perframe = false;	// target readout updates per-frame rather than per-tic. experimental for asmjit performance testing (seems to work well so far)
user int flak_colorprefs = 2;				// 0: team color, 1: player color, 2: custom color
user color flak_colorcustom = "00 80 ff";		// custom hud color
user int flak_opacity = 15;				// UT's opacity is 1 <-> 16 in steps of 1 (default 15)
							// 16 means fully opaque, everything else is just additive with gradually lowering alpha
							// status is never fully opaque (clamped under 16)
							// currently selected weapon and numbers are fully opaque until 8 opacity (their opacity is bumped by 7 basically)
user bool flak_showweapons = true;			// if disabled, frags and ammo are shown centered, with a gap for armor and health
user bool flak_showstatus = true;			// if disabled armor and health show on the top right (or center between frags and ammo if weapon display is disabled)
user bool flak_showammo = true;				// show ammo counters
user bool flak_showfrags = true;			// show kill/frag count
user bool flak_showinfo = true;				// show name of aimed at player in mp (and their health if in coop or same team)
user float flak_hudsize = 1.0;				// 0.2 <-> 1.0 in steps of 0.2 (default 1.0)
user float flak_weaponsize = 0.8;			// 0.2 <-> 1.0 in steps of 0.2 (default 0.8)
user float flak_statussize = 1.0;			// 0.5 <-> 1.5 in steps of 0.1 (default 1.0)
user bool flak_footsteps = true;			// players make footstep sounds
user bool flak_bossfootsteps = false;			// boss players play mechanic footsteps (unlike in vanilla UT)
server bool flak_translocator = false;			// translocator is enabled (hello, sequence breaking)
server bool flak_transloc2k4 = false;			// translocator has recharging ammo like in UT2k4 and up
user bool flak_noswitchdeemer = true;			// don't switch to redeemer when out of ammo
user bool flak_deemershader = false;			// fancy blur/grain/tint shader
server bool flak_classicsshock = false;			// classic enhanced shock rifle (no altfire, beams don't have splash damage)
server bool flak_utmovement = false;			// emulate UE1's air/ground movement physics
server bool flak_doomspeed = false;			// keep Doomguy run speed when using UT movement
server bool flak_doomaircontrol = false;		// keep Doom's limited air control when using UT movement
server bool flak_tapdodge = true;			// enable double tap dodge (may be cheaty for maps that disallow jumping)
server int flak_taptics = 8;				// maximum delay in tics between double taps for a successful dodge
server bool flak_nobosstelefrag = false;		// disable telefragging of boss monsters (useful when translocator is enabled)
server bool flak_nowalkdrop = false;			// [GLITCHY] don't drop off ledges while holding walk key
server bool flak_corpsedamage = false;			// [WIP/EXPERIMENTAL] allow corpses to take damage and be gibbed, currently just causes a jump to XDeath until gore system is implemented
server bool flak_radboots = true;			// jump boots protect against damaging floors (this is to account for the lack of a radsuit)
server bool flak_blood = true;				// [WIP] use doom tournament blood (disable if using another gore mod)
server bool flak_gibs = false;				// [WIP/UNSTABLE] use doom tournament gibbing (disable if using another gore mod)
server bool flak_doomtest = false;			// made toggleable due to loud complaints
server noarchive bool flak_instagib = false;		// instagib mode (only for dm) - this cvar has to be set from the command line
user float flak_flashstrength = 1.0;			// strength of screen flashes
server bool flak_sawammo = false;			// chainsaw uses fuel
user bool flak_zoomsound = false;			// sniper rifle plays unused zoom sounds (annoying)
user bool flak_zoomshader = false;			// sniper rifle has a scope shader
server bool flak_vanillaarmor = true;			// shield belt removes body/thigh armors on pickup
